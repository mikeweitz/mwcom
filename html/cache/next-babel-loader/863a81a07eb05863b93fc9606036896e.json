{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { styled } from 'styletron-react';\nimport { THEME } from '../../styles/theme';\nconst {\n  fontSize\n} = THEME;\nconst {\n  colors,\n  fonts,\n  breakpoints: {\n    tablet,\n    tabletLarge,\n    desk,\n    wide,\n    print\n  }\n} = THEME; // statically styled component\n\nexport const Position = styled('article', {\n  width: '100%',\n  color: colors.black,\n  // textShadow: `1px 1px 1px ${colors.steelBlue}`,\n  marginTop: '4em',\n  paddingBottom: '4em',\n  position: 'relative',\n  justifySelf: 'center',\n  ':first-of-type': {\n    marginTop: '2em'\n  },\n  [tablet]: {\n    ':first-of-type': {\n      marginTop: '4em'\n    }\n  },\n  ':after': {\n    position: 'absolute',\n    content: '\"\"',\n    height: '1px',\n    width: '100%',\n    opacity: '0.5',\n    backgroundColor: colors.black,\n    left: '0',\n    bottom: '0' // boxShadow: `0 4px 0 rgba(0,0,0,0.25)`,\n\n  },\n  [print]: {\n    display: 'inline-block',\n    width: '50%',\n    verticalAlign: 'top',\n    paddingRight: '4em',\n    paddingTop: '0',\n    marginTop: '0',\n    marginBottom: '4em',\n    ':first-of-type': {\n      marginTop: '0'\n    },\n    ':after': {\n      width: '80%'\n    }\n  }\n});\nexport const Role = styled('header', ({\n  $hover\n}) => _objectSpread({\n  textTransform: 'uppercase',\n  fontSize: '1.25em',\n  lineHeight: '1em',\n  fontWeight: '700',\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'inline-block',\n  // textShadow: `1px 1px 3px ${colors.gray2}`,\n  textShadow: 'none',\n  transition: 'all 0.25s',\n  paddingTop: '0.25em',\n  paddingBottom: '0.25em',\n  paddingLeft: '0',\n  paddingRight: '2em',\n  ':after': {\n    content: '\"\"',\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'rgba(0,0,0,0.1)',\n    transition: 'all 0.25s ease',\n    position: 'absolute',\n    top: '0',\n    left: $hover ? '0' : '-101%'\n  }\n}, $hover ? {\n  paddingLeft: '1em',\n  paddingRight: '1em'\n} : {}));\nexport const Organization = styled('h4', {\n  fontSize: fontSize.position,\n  margin: '0.5em 0 0.75em',\n  lineHeight: '20px'\n});\nexport const Dates = styled('div', {\n  fontStyle: 'oblique'\n});\nexport const Subhead = styled('strong', {\n  display: 'block',\n  lineHeight: '1.5em',\n  margin: '1.5em 0 0.25em',\n  fontSize: '0.8em'\n});\nexport const List = styled('ul', {\n  [print]: {\n    width: '75%'\n  }\n});","map":null,"metadata":{},"sourceType":"module"}