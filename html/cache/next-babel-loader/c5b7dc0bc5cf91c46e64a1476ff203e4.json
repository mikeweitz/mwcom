{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\nimport { throttle } from 'lodash';\nvar isBrowser = true;\nvar useIsomorphicEffect = isBrowser ? useLayoutEffect : useEffect;\n\nvar getScroll = function getScroll() {\n  return {\n    x: isBrowser ? window.scrollX : 0,\n    y: isBrowser ? window.scrollY : 0,\n    isScrolled: false\n  };\n};\n\nvar ScrollContext = React.createContext();\n\nfunction useScrollContext() {\n  var context = React.useContext(ScrollContext);\n\n  if (context === undefined) {\n    throw new Error('useScrollContext must be used within a ScrollProvider');\n  }\n\n  return context;\n}\n\nvar ScrollProvider = function ScrollProvider(_ref) {\n  var children = _ref.children,\n      _ref$scrollThreshold = _ref.scrollThreshold,\n      scrollThreshold = _ref$scrollThreshold === void 0 ? 50 : _ref$scrollThreshold;\n\n  var _useState = useState({\n    x: 0,\n    y: 0,\n    isScrolled: false,\n    scrolling: false\n  }),\n      scroll = _useState[0],\n      setScroll = _useState[1];\n\n  useIsomorphicEffect(function () {\n    if (!isBrowser) {\n      return;\n    }\n\n    var timer = null;\n    var delay = 250;\n    var handleScroll = throttle(function () {\n      clearTimeout(timer);\n      var coords = getScroll();\n\n      var newScroll = _objectSpread(_objectSpread({}, coords), {}, {\n        isScrolled: Math.abs(coords.y) > scrollThreshold,\n        scrolling: true\n      });\n\n      setScroll(_objectSpread({}, newScroll));\n      timer = setTimeout(function () {\n        setScroll(_objectSpread(_objectSpread({}, newScroll), {}, {\n          scrolling: false\n        }));\n      }, delay + 10);\n    }, delay, {\n      leading: true\n    });\n    window.addEventListener('scroll', handleScroll);\n    return function () {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return __jsx(ScrollContext.Provider, {\n    value: scroll\n  }, children);\n};\n\nexport { ScrollProvider, useScrollContext };","map":null,"metadata":{},"sourceType":"module"}