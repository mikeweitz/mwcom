version: 2.1

orbs:
  shellcheck: circleci/shellcheck@1.3.16

executors:
  node-browser:
    docker:
      - image: circleci/node:12.16.3-browsers
    working_directory: ~/weitzly

jobs:
  build:
    executor: node-browser
    steps:
      - add_ssh_keys:
          fingerprints:
            - '4e:fe:3f:a2:04:6d:60:d2:97:bc:d7:14:24:b0:1b:ab'
      # - run: ssh-keyscan $REMOTE_IP >> ~/.ssh/known_hosts
      - checkout
      - run:
          name: Code Has Arrived
          command: |
            ls -al
            echo '^^^That should look familiar^^^'
      - run: npm install
      - run: npm run test
      - run: npm run build
      - run: mkdir -p ~/weitzly/output
      - run: cp -avr html ~/weitzly/output/html
      - run: cp -avr scripts ~/weitzly/output/scripts
      # - store_artifacts:
      #     path: ~/weitzly/html
      - persist_to_workspace:
          root: output
          paths:
            - html/*
            - scripts/*
  deploy:
    executor: node-browser

    steps:
      - attach_workspace:
          at: ~/weitzly/output
      - add_ssh_keys:
          fingerprints:
            - '63:4a:86:b0:a4:a2:83:c8:8a:42:ef:0d:0c:dc:31:bb'
      - run: ssh-keyscan $REMOTE_IP >> ~/.ssh/known_hosts
      - run:
          name: Review files...
          command: |
            pwd
            cd ~/weitzly/output
            ls -al
            echo '^^^That should look familiar^^^'
      - run:
          name: Clean the server
          command: |
            cd ~/weitzly/output/scripts
            echo 'move to scripts folder'
            ./clean.sh
      - run:
          name: Deploy Over SSH
          command: |
            cd ~/weitzly/output/scripts
            echo 'move to scripts folder'
            ls -al
            echo '^^^That should look familiar^^^'
            ./deploy.sh
      - run:
          name: Restart NextJS
          command: |
            cd ~/weitzly/output/scripts
            echo 'move to scripts folder'
            ls -al
            echo '^^^That should look familiar^^^'
            ./deploy.sh
workflows:
  build-and-deploy:
    jobs:
      - shellcheck/check
      - build
      - deploy:
          requires:
            - build
            - shellcheck/check
          filters:
            branches:
              only: master # only deploy on the master branch
